/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import javax.imageio.plugins.jpeg.JPEGHuffmanTable;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import model.City;
import model.Community;
import model.House;
import model.Person;

/**
 *
 * @author jaspr
 */
public class ViewPerson extends javax.swing.JPanel {

    /**
     * Creates new form ViewPerson
     */
    JPanel workarea;
    Person person;
    City city;
    public ViewPerson(JPanel workarea, Person person,City city) {
        initComponents();
        this.workarea = workarea;
        this.person = person;
        this.city = city;
        
        txt_name.setText(String.valueOf(person.getName()));
        txt_age.setText(String.valueOf(person.getAge()));
        txt_city.setText(String.valueOf(person.getCity()));
        txt_comm.setText(String.valueOf(person.getCommunity()));
        txt_house.setText(String.valueOf(person.getHouse()));
        
       
        
    }
    public void populatecombocity(){
        
        combo_city.addItem("Select City");
        for(City c:city.getCitylist()){
            combo_city.addItem(String.valueOf(c));
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_name = new javax.swing.JTextField();
        txt_age = new javax.swing.JTextField();
        btn_update = new javax.swing.JButton();
        btn_save = new javax.swing.JButton();
        combo_city = new javax.swing.JComboBox<>();
        combo_community = new javax.swing.JComboBox<>();
        combo_house = new javax.swing.JComboBox<>();
        txt_city = new javax.swing.JTextField();
        txt_comm = new javax.swing.JTextField();
        txt_house = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Name");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Age");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("City");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Comm");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("House");

        txt_name.setEnabled(false);

        txt_age.setEnabled(false);

        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        combo_city.setEnabled(false);
        combo_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_cityActionPerformed(evt);
            }
        });

        combo_community.setEnabled(false);
        combo_community.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_communityActionPerformed(evt);
            }
        });

        combo_house.setEnabled(false);
        combo_house.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_houseActionPerformed(evt);
            }
        });

        txt_city.setEnabled(false);

        txt_comm.setEnabled(false);

        txt_house.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(153, 153, 153)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(btn_update))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_save)
                            .addComponent(txt_age, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(txt_name)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_house, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                            .addComponent(txt_city)
                            .addComponent(txt_comm))
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_city, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_community, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combo_house, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(txt_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(combo_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(combo_community, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_comm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txt_house, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(combo_house, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_update)
                    .addComponent(btn_save))
                .addContainerGap(136, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        txt_name.setEnabled(true);
        txt_age.setEnabled(true);
        combo_city.setEnabled(true);
        combo_community.setEnabled(true);
        combo_house.setEnabled(true);
        btn_save.setEnabled(true);
        
        populatecombocity();
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:

        if(combo_city.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(combo_city, "Please selct city");
        }
        else if(combo_community.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(combo_city, "Please select community");
        }
        else{
            
            person.setName(String.valueOf(txt_name.getText()));
            person.setAge(Integer.parseInt(txt_age.getText()));
            
            for(City c:city.getCitylist()){
                if(String.valueOf(c.getName()).equals(String.valueOf(txt_city.getText()))){
                    person.setCity(c);
                    JOptionPane.showMessageDialog(combo_city, "City Updated");
                }
            }
            
            for(City c:city.getCitylist()){
            if(String.valueOf(c.getName()).equals(String.valueOf(txt_city.getText()))){
               for(Community comm:c.getCommunitylist()){
                   if(String.valueOf(comm.getName()).equals(String.valueOf(txt_comm.getText()))){
                       person.setCommunity(comm);
                       JOptionPane.showMessageDialog(combo_city, "Community Updated");
                   }
               }
            }
        }
            
            for(City c:city.getCitylist()){
            if(String.valueOf(c.getName()).equals(String.valueOf(txt_city.getText()))){
               for(Community comm:c.getCommunitylist()){
                   if(String.valueOf(comm.getName()).equals(String.valueOf(txt_comm.getText()))){
                       for(House h:comm.getHouselist()){
                         if(String.valueOf(h.getStreetname()).equals(String.valueOf(txt_house.getText()))){
                             person.setHouse(h);
                             JOptionPane.showMessageDialog(combo_city, "House Updated");
                         }
                       }
                   }
               }
            }
        }
            
           /*for(City c:city.getCitylist()){
               for(Community comm:c.getCommunitylist()){
                   for(House h:comm.getHouselist()){
                       for(Person p:h.getPersonlist()){
                           JOptionPane.showMessageDialog(combo_city, p.getCity() + " " +p.getCommunity() + " "+p.getHouse());
                       }
                   }
               }
           }*/
            
            
            
            /*for(City c:city.getCitylist()){
                //JOptionPane.showMessageDialog(combo_city, "h1");
                if(String.valueOf(c.getName()).equals(combo_city.getSelectedItem())){
                    //JOptionPane.showMessageDialog(combo_city, "h2");
                    for(Community comm:c.getCommunitylist()){
                        if(String.valueOf(comm.getName()).equals(combo_community.getSelectedItem())){
                            //JOptionPane.showMessageDialog(combo_city, "h3");
                            for(House h:comm.getHouselist()){
                                //JOptionPane.showMessageDialog(combo_city, "h4");
                                if(String.valueOf(h.getStreetname()).equals(combo_house.getSelectedItem())){
                                    //JOptionPane.showMessageDialog(combo_city, person.getId());
                                    //JOptionPane.showMessageDialog(combo_city, "h5");
                                    for(Person per:h.getPersonlist()){
                                        //JOptionPane.showMessageDialog(combo_city, "id"+per.getId());
                                        //JOptionPane.showMessageDialog(combo_city, "id"+person.getId());
                                        if(String.valueOf(per.getId()).equals(String.valueOf(person.getId()))){
                                            JOptionPane.showMessageDialog(combo_city, "h6");
                                            person.setName(String.valueOf(txt_name.getText()));
                                            person.setAge(Integer.parseInt(txt_age.getText()));
                                            JOptionPane.showMessageDialog(combo_city, c + " " + comm+" " +h );
                                            person.setCity(c);
                                            person.setCommunity(comm);
                                            person.setHouse(h);
                                            JOptionPane.showMessageDialog(combo_city, "Person Updated");
                                        }
                                    }
                                    
                                    
                                }
                            }
                        }
                    }
                }
            }*/
        }
      
       
                                  
                               
        
    }//GEN-LAST:event_btn_saveActionPerformed
     public boolean checkPerson(){
        //JOptionPane.showMessageDialog(combo_city, "h1");
        for(City c:city.getCitylist()){
            if(String.valueOf(c.getName()).equals(String.valueOf(combo_city.getSelectedItem()))){
                //JOptionPane.showMessageDialog(combo_city, "h2");
                for(Community comm:c.getCommunitylist()){
                    if(String.valueOf((comm.getName())).equals(String.valueOf(combo_community.getSelectedItem()))){
                        //JOptionPane.showMessageDialog(combo_city, "h3");
                        for(House h:comm.getHouselist()){
                            if(String.valueOf(h.getStreetname()).equals(combo_house.getSelectedItem())){
                                //JOptionPane.showMessageDialog(combo_city, "h4");
                                for(Person p:h.getPersonlist()){
                                    if(String.valueOf(p.getName()).equals(String.valueOf(txt_name.getText()))){
                                        //JOptionPane.showMessageDialog(combo_city, "h5");
                                        return true;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return  false;
    }
    private void combo_communityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_communityActionPerformed
            // TODO add your handling code here:
        if(combo_community.getSelectedIndex() == 0){
          txt_comm.setText(String.valueOf(person.getCommunity()));
          
        }
       else{
        txt_comm.setText(String.valueOf(combo_community.getSelectedItem()));
        
       }
       if(combo_community.isEnabled()){
           combo_house.removeAllItems();
        for(City c:city.getCitylist()){
            if(c.getName().equals(combo_city.getSelectedItem())){
                for(Community comm:c.getCommunitylist()){
                    if(comm.getName().equals(combo_community.getSelectedItem())){
                        for(House h : comm.getHouselist()){
                            /*JOptionPane.showMessageDialog(combo_city,
                                             c.getName() + " " + comm.getName() + " "+h.getStreetname());*/
                            combo_house.addItem(String.valueOf(h));
                    }

                    }
                }
            }
        } 
       }
    }//GEN-LAST:event_combo_communityActionPerformed

    private void combo_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_cityActionPerformed
        // TODO add your handling code here:
        
        if(combo_city.getSelectedIndex() == 0){
            txt_city.setText(String.valueOf(person.getCity()));
            
        }
        else{
            txt_city.setText(String.valueOf(combo_city.getSelectedItem()));
            
        }
        if(combo_city.isEnabled()){
             combo_community.removeAllItems();
                combo_community.addItem("Select Community");
                for(City c:city.getCitylist()){
                if(c.getName().equals(combo_city.getSelectedItem())){
                    City cityselected = c;
                    for(int i=0;i<c.getCommunitylist().size();i++){
                        combo_community.addItem(String.valueOf(c.getCommunitylist().get(i)));
                    }
                }
        }
        }
    }//GEN-LAST:event_combo_cityActionPerformed

    private void combo_houseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_houseActionPerformed
        // TODO add your handling code here:
        /*if(combo_house.getSelectedItem() == null){
            txt_house.setText("");
            JOptionPane.showMessageDialog(combo_city, "NO HOUSE");
            return;
        }*/
        txt_house.setText(String.valueOf(combo_house.getSelectedItem()));
        
        
        
    }//GEN-LAST:event_combo_houseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> combo_city;
    private javax.swing.JComboBox<String> combo_community;
    private javax.swing.JComboBox<String> combo_house;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txt_age;
    private javax.swing.JTextField txt_city;
    private javax.swing.JTextField txt_comm;
    private javax.swing.JTextField txt_house;
    private javax.swing.JTextField txt_name;
    // End of variables declaration//GEN-END:variables
}
