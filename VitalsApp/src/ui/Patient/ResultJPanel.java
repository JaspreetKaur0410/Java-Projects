/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.Patient;

import java.beans.PersistenceDelegate;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.xml.stream.events.Comment;
import model.City;
import model.Community;
import model.Encounter;
import model.House;
import model.Patient;

/**
 *
 * @author jaspr
 */
public class ResultJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ResultJPanel
     */
    JPanel workarea;
    City city;
    public ResultJPanel(JPanel workarea, City city) {
        initComponents();
        this.workarea = workarea;
        this.city = city;
        
        loadcity();
        
    }
    
    public void loadcity(){
        combo_city.removeAllItems();
        combo_city.addItem("Select City");
        for(City c:city.getCitylist()){
            combo_city.addItem(String.valueOf(c));
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        combo_city = new javax.swing.JComboBox<>();
        combo_community = new javax.swing.JComboBox<>();
        txt_abnormals = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btn_getTotal = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("City");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Community");

        combo_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_cityActionPerformed(evt);
            }
        });

        combo_community.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Community" }));

        txt_abnormals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_abnormalsActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Abnormals");

        btn_getTotal.setText("Get Total");
        btn_getTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_getTotalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(56, 56, 56)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_abnormals)
                            .addComponent(combo_city, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_community, 0, 142, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(btn_getTotal)))
                .addContainerGap(224, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(combo_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(combo_community, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txt_abnormals, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btn_getTotal)
                .addContainerGap(263, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void combo_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_cityActionPerformed
        // TODO add your handling code here:
        
        combo_community.removeAllItems();
        
        for(City c:city.getCitylist()){
                if(c.getName().equals(combo_city.getSelectedItem())){
                    City cityselected = c;
                    for(int i=0;i<c.getCommunitylist().size();i++){
                        combo_community.addItem(String.valueOf(c.getCommunitylist().get(i)));
                    }
                }
        }
    }//GEN-LAST:event_combo_cityActionPerformed

    private void txt_abnormalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_abnormalsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_abnormalsActionPerformed

    private void btn_getTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_getTotalActionPerformed
        // TODO add your handling code here:
        
        int count = 0;
        
        for(City c:city.getCitylist()){
            if(c.getName().equals(combo_city.getSelectedItem())){
                for(Community comm:c.getCommunitylist()){
                    if(comm.getName().equals(combo_community.getSelectedItem())){
                        
                        for(House h:comm.getHouselist()){
                            for(Patient p:h.getPatientlist()){
                                if(p.getEncounterhistory().size()>1){
                                    
                                        int i_recent_date = p.getEncounterhistory().size()-1;
                                        if(p.getEncounterhistory().get(i_recent_date).getStatus().equals("Abnormal")){
                                            count++;
                                        }
                                    
                                }
                                else if(p.getEncounterhistory().size()==1){
                                    if(p.getEncounterhistory().get(0).getStatus().equals("Abnormal")){
                                            count++;
                                        }
                                }
                            }
                        }
                        
                        
                    }
                }
            }
            txt_abnormals.setText(String.valueOf(count));
        }
        
    }//GEN-LAST:event_btn_getTotalActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_getTotal;
    private javax.swing.JComboBox<String> combo_city;
    private javax.swing.JComboBox<String> combo_community;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txt_abnormals;
    // End of variables declaration//GEN-END:variables
}
