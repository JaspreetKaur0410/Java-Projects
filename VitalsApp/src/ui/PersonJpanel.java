/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import javax.imageio.plugins.jpeg.JPEGHuffmanTable;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.xml.stream.events.Comment;
import model.City;
import model.Community;
import model.House;
import model.Patient;
import model.Person;

/**
 *
 * @author jaspr
 */
public class PersonJpanel extends javax.swing.JPanel {

    /**
     * Creates new form PersonJpanel
     */
    City city;
    JPanel workarea;
    public PersonJpanel(JPanel workarea,City city) {
        initComponents();
        this.workarea = workarea;
        this.city = city;
        
        populatecombocity();
        refreshTable();
    }
    
    public void refreshTable(){
        
        DefaultTableModel model = (DefaultTableModel)tbl_persons.getModel();
        model.setRowCount(0);
        
        
        for(City c : city.getCitylist()){
            for(Community comm : c.getCommunitylist()){
                for(House h : comm.getHouselist()){
                    for(Person p : h.getPersonlist()){
                        Object row[] = new Object[4];
                        row[0] = p.getCity();
                        row[1] = p.getCommunity();
                        row[2] = p.getHouse();
                        row[3] = p;
                        //row[4] = p.getId();
                        model.addRow(row);
                    }
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        combo_city = new javax.swing.JComboBox<>();
        combo_house = new javax.swing.JComboBox<>();
        combo_community = new javax.swing.JComboBox<>();
        txt_personname = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_persons = new javax.swing.JTable();
        btn_addperson = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txt_age = new javax.swing.JTextField();
        btn_remove = new javax.swing.JButton();
        btn_view = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Person Age");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("City");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Community");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("House");

        combo_city.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_city.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_cityActionPerformed(evt);
            }
        });

        combo_house.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select House", " " }));
        combo_house.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_houseActionPerformed(evt);
            }
        });

        combo_community.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Community" }));
        combo_community.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_communityActionPerformed(evt);
            }
        });

        tbl_persons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "City", "Community", "House", "Person Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_persons);

        btn_addperson.setText("Add Person");
        btn_addperson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addpersonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Person Name");

        btn_remove.setText("Remove");
        btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removeActionPerformed(evt);
            }
        });

        btn_view.setText("View");
        btn_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_viewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(combo_city, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(combo_house, 0, 135, Short.MAX_VALUE)
                            .addComponent(combo_community, 0, 135, Short.MAX_VALUE)
                            .addComponent(txt_personname)
                            .addComponent(txt_age)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(187, 187, 187)
                        .addComponent(btn_addperson)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(btn_remove)
                        .addGap(66, 66, 66)
                        .addComponent(btn_view))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(280, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(combo_community, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(combo_house, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_personname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_addperson)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_remove)
                    .addComponent(btn_view))
                .addContainerGap(100, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populatecombocity(){
        combo_city.removeAllItems();
        combo_city.addItem("Select City");
        for(City c:city.getCitylist()){
            combo_city.addItem(String.valueOf(c));
        }
    }
    
    
    
    private void combo_communityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_communityActionPerformed
        // TODO add your handling code here:
       combo_house.removeAllItems();
        for(City c:city.getCitylist()){
            if(c.getName().equals(combo_city.getSelectedItem())){
                for(Community comm:c.getCommunitylist()){
                    if(comm.getName().equals(combo_community.getSelectedItem())){
                        for(House h : comm.getHouselist()){
                            /*JOptionPane.showMessageDialog(combo_city,
                                             c.getName() + " " + comm.getName() + " "+h.getStreetname());*/
                            combo_house.addItem(String.valueOf(h));
                    }

                    }
                }
            }
        } 
    }//GEN-LAST:event_combo_communityActionPerformed

    private void combo_cityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_cityActionPerformed
        // TODO add your handling code here:
        combo_community.removeAllItems();
        combo_house.removeAllItems();
        //combo_community.addItem("Select Community");
        for(City c:city.getCitylist()){
                if(c.getName().equals(combo_city.getSelectedItem())){
                    City cityselected = c;
                    for(Community comm:c.getCommunitylist()){
                        //JOptionPane.showMessageDialog(combo_city, comm);
                        combo_community.addItem(String.valueOf(comm));
                    }
                    
                }
        }
    }//GEN-LAST:event_combo_cityActionPerformed

    private void btn_addpersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addpersonActionPerformed
        // TODO add your handling code here:
        
        String person_name = String.valueOf(txt_personname.getText());
        String person_age = String.valueOf(txt_age.getText());
        int selectedcityindex = combo_city.getSelectedIndex();
        
        if(selectedcityindex == 0){
            JOptionPane.showMessageDialog(combo_city, "Please select city first");
            return;
        }
        else if(txt_personname.getText().equals("") || txt_age.getText().equals("")){
            JOptionPane.showMessageDialog(combo_city, "Please provide person details");
        }
        else{
       
            for(City c:city.getCitylist()){
                if(c.getName().equals(combo_city.getSelectedItem())){
                    for(Community comm:c.getCommunitylist()){
                        if(comm.getName().equals(combo_community.getSelectedItem())){
                            for(House h:comm.getHouselist()){
                              if(h.getStreetname().equals(combo_house.getSelectedItem())){
                                boolean check = checkPerson();
                                if(check == false){
                                    Person p = h.addPerson();
                                    p.setName(person_name);
                                    p.setAge(Integer.parseInt(person_age));
                                    p.setCity(c);
                                    p.setCommunity(comm);
                                    p.setHouse(h);
                                }
                                else{
                                    JOptionPane.showMessageDialog(combo_city, "Person already exist");
                                       
                                }
                                
                              }
                            }
                        }
                    }
                }
            }
        
        }
        
        refreshTable();
        
    }//GEN-LAST:event_btn_addpersonActionPerformed
    
    public boolean checkPerson(){
        //JOptionPane.showMessageDialog(combo_city, "h1");
        for(City c:city.getCitylist()){
            if(String.valueOf(c.getName()).equals(String.valueOf(combo_city.getSelectedItem()))){
                //JOptionPane.showMessageDialog(combo_city, "h2");
                for(Community comm:c.getCommunitylist()){
                    if(String.valueOf((comm.getName())).equals(String.valueOf(combo_community.getSelectedItem()))){
                        //JOptionPane.showMessageDialog(combo_city, "h3");
                        for(House h:comm.getHouselist()){
                            if(String.valueOf(h.getStreetname()).equals(combo_house.getSelectedItem())){
                                //JOptionPane.showMessageDialog(combo_city, "h4");
                                for(Person p:h.getPersonlist()){
                                    if(String.valueOf(p.getName()).equals(String.valueOf(txt_personname.getText()))){
                                        //JOptionPane.showMessageDialog(combo_city, "h5");
                                        return true;
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return  false;
    }
    
    private void combo_houseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_houseActionPerformed
        // TODO add your handling code here:
        
       
        
    }//GEN-LAST:event_combo_houseActionPerformed

    private void btn_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removeActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tbl_persons.getModel();
        int selectedrow = tbl_persons.getSelectedRow();
        if(selectedrow < 0){
            JOptionPane.showMessageDialog(btn_remove, "Please select Community");
        }
        else{
            Community c = (Community)tbl_persons.getValueAt(selectedrow, 1);
            City ci = (City)tbl_persons.getValueAt(selectedrow, 0);
            House h = (House)tbl_persons.getValueAt(selectedrow, 2);
            Person p = (Person)tbl_persons.getValueAt(selectedrow, 3);
            
            h.removePerson(p, c);
            JOptionPane.showMessageDialog(combo_city, "Person Removes from house"+h);
            refreshTable();
        }
        
        
        
    }//GEN-LAST:event_btn_removeActionPerformed

    private void btn_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_viewActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel)tbl_persons.getModel();
        int selectedrow = tbl_persons.getSelectedRow();
        
        Person per = (Person)model.getValueAt(selectedrow, 3);
        
        ViewPerson viewperson = new ViewPerson(workarea,per,city);
        workarea.add("viewperson",viewperson);
        CardLayout layout = (CardLayout)workarea.getLayout();
        layout.next(workarea);
    }//GEN-LAST:event_btn_viewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addperson;
    private javax.swing.JButton btn_remove;
    private javax.swing.JButton btn_view;
    private javax.swing.JComboBox<String> combo_city;
    private javax.swing.JComboBox<String> combo_community;
    private javax.swing.JComboBox<String> combo_house;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_persons;
    private javax.swing.JTextField txt_age;
    private javax.swing.JTextField txt_personname;
    // End of variables declaration//GEN-END:variables
}
