/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.Doctor;

import Business.Child.Child;
import Business.Child.ChildDirectory;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MedicalCheckRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.Color;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author jaspr
 */
public class DoctorCheckupJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorCheckupJPanel
     */
    EcoSystem business;
    UserAccount account;
    JPanel userProcessContainer;
    Enterprise enterprise;
    Organization organization;
    ChildDirectory childdir;
    JPanel rightpanel1;
    Child childval;
    MedicalCheckRequest workRequest;
    
    public DoctorCheckupJPanel(EcoSystem business,UserAccount account,JPanel userProcessContainer,
                                Enterprise enterprise,
                                Organization organization,ChildDirectory childdir,
                                JPanel rightpanel1,Child childval,MedicalCheckRequest workRequest) {
        initComponents();
        this.business = business;
        this.account = account;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.organization = organization;
        this.childdir = childdir;
        this.rightpanel1 = rightpanel1;
        this.childval = childval;
        this.workRequest = workRequest;
        
        populatechilddata();
        
        lbl_bp.setVisible(false);
        lbl_breathing.setVisible(false);
        lbl_pulse.setVisible(false);
        lbl_temp.setVisible(false);
        lbl_weight.setVisible(false);
        
        
        Double bodytemp = childval.getBodytemp();
        if(bodytemp != null){
           panel_seeReport.setVisible(true);
           btn_seereport.setVisible(true);
        }
        else{
           panel_seeReport.setVisible(false);
           btn_seereport.setVisible(false);
        }
        
    }
    
    public void populatechilddata(){
        txt_agency.setText(childval.getOrg().toString());
        txt_firstname.setText(childval.getFirstname());
        txt_lastname.setText(childval.getLastname());
        txt_gender.setText(childval.getGender());
        txt_city.setText(childval.getCity());
        txt_age.setText(String.valueOf(childval.getAge()));
        txt_message.setText(childval.getAbout_child());
        txt_message.setText((workRequest.getMessage()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        panel_seeReport = new javax.swing.JPanel();
        btn_seereport = new javax.swing.JButton();
        panel_savevitals = new javax.swing.JPanel();
        btn_svaevitals = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel59 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        txt_breathing = new javax.swing.JTextField();
        txt_weight = new javax.swing.JTextField();
        txt_bp = new javax.swing.JTextField();
        txt_temp = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        date = new com.toedter.calendar.JDateChooser();
        jLabel45 = new javax.swing.JLabel();
        txt_pulse1 = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        panel_singleparent = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        txt_city = new javax.swing.JTextField();
        txt_firstname = new javax.swing.JTextField();
        txt_lastname = new javax.swing.JTextField();
        txt_gender = new javax.swing.JTextField();
        txt_age = new javax.swing.JTextField();
        txt_agency = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel57 = new javax.swing.JLabel();
        txt_message = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        txt_about1 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        txt_dater = new javax.swing.JTextField();
        txt_weightr = new javax.swing.JTextField();
        txt_bpr = new javax.swing.JTextField();
        txt_tempr = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        txt_pulser = new javax.swing.JTextField();
        txt_breathingr = new javax.swing.JTextField();
        lbl_breathing = new javax.swing.JLabel();
        lbl_weight = new javax.swing.JLabel();
        lbl_pulse = new javax.swing.JLabel();
        lbl_bp = new javax.swing.JLabel();
        lbl_temp = new javax.swing.JLabel();
        panel_requestlab = new javax.swing.JPanel();
        btn_requestlab = new javax.swing.JButton();

        jPanel5.setBackground(new java.awt.Color(204, 255, 0));

        panel_seeReport.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_seereport.setText("See Report");
        btn_seereport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_seereportActionPerformed(evt);
            }
        });
        panel_seeReport.add(btn_seereport, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        panel_savevitals.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_svaevitals.setText("Save Vitals");
        btn_svaevitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_svaevitalsActionPerformed(evt);
            }
        });
        panel_savevitals.add(btn_svaevitals, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jPanel7.setBackground(new java.awt.Color(204, 255, 204));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel59.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel59.setText("VITAL SIGNS");
        jPanel7.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        jLabel41.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel41.setText("Weight");
        jPanel7.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        jLabel42.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel42.setText("Blood Pressure");
        jPanel7.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jLabel43.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel43.setText("Body Temperature");
        jPanel7.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));
        jPanel7.add(txt_breathing, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 130, -1));
        jPanel7.add(txt_weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 130, -1));

        txt_bp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_bpActionPerformed(evt);
            }
        });
        jPanel7.add(txt_bp, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 130, -1));
        jPanel7.add(txt_temp, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 130, -1));

        jLabel44.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel44.setText("Breathing rate");
        jPanel7.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));
        jPanel7.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 160, -1));

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel45.setText("Pulse Rate");
        jPanel7.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));
        jPanel7.add(txt_pulse1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 130, -1));

        jLabel53.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel53.setText("Date");
        jPanel7.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel28.setText("PERSONAL INFORMATION");
        jPanel2.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 242, -1));

        panel_singleparent.setBackground(new java.awt.Color(204, 255, 204));
        panel_singleparent.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel49.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel49.setText("Gender");
        panel_singleparent.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabel54.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel54.setText("Last Name");
        panel_singleparent.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel35.setText("City");
        panel_singleparent.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        jLabel56.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel56.setText("First Name");
        panel_singleparent.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel36.setText("Age");
        panel_singleparent.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));
        panel_singleparent.add(txt_city, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 130, -1));
        panel_singleparent.add(txt_firstname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 130, -1));
        panel_singleparent.add(txt_lastname, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, 130, -1));
        panel_singleparent.add(txt_gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 130, -1));
        panel_singleparent.add(txt_age, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 130, -1));

        jPanel2.add(panel_singleparent, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 290, 240));

        txt_agency.setBackground(new java.awt.Color(102, 102, 102));
        txt_agency.setForeground(new java.awt.Color(255, 255, 255));
        txt_agency.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_agency.setEnabled(false);
        jPanel2.add(txt_agency, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 130, -1));

        jLabel40.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel40.setText("Organisation");
        jPanel2.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, -1));

        jPanel6.setBackground(new java.awt.Color(204, 255, 204));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel57.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel57.setText("Message from Organisation");
        jPanel6.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, -1, -1));
        jPanel6.add(txt_message, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 180, 60));

        jLabel58.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel58.setText("ABOUT THE CHILD");
        jPanel6.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));
        jPanel6.add(txt_about1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 180, 60));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(204, 255, 204));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel60.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel60.setText("VITAL SIGNS REPORT ");
        jPanel8.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel46.setText("Date");
        jPanel8.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel47.setText("Weight");
        jPanel8.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel48.setText("Blood Pressure");
        jPanel8.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jLabel50.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel50.setText("Body Temperature");
        jPanel8.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));
        jPanel8.add(txt_dater, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 130, -1));
        jPanel8.add(txt_weightr, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 90, -1));

        txt_bpr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_bprActionPerformed(evt);
            }
        });
        jPanel8.add(txt_bpr, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 90, -1));
        jPanel8.add(txt_tempr, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, 90, -1));

        jLabel51.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel51.setText("Breathing rate");
        jPanel8.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        jLabel52.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel52.setText("Pulse Rate");
        jPanel8.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, -1, -1));
        jPanel8.add(txt_pulser, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 70, 90, -1));
        jPanel8.add(txt_breathingr, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 90, -1));

        lbl_breathing.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_breathing.setText("a");
        jPanel8.add(lbl_breathing, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 160, 70, 20));

        lbl_weight.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_weight.setText("a");
        jPanel8.add(lbl_weight, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 45, 70, -1));

        lbl_pulse.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_pulse.setText("a");
        jPanel8.add(lbl_pulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 75, 70, -1));

        lbl_bp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_bp.setText("a");
        jPanel8.add(lbl_bp, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 70, 20));

        lbl_temp.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_temp.setText("a");
        jPanel8.add(lbl_temp, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 130, 70, 20));

        panel_requestlab.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_requestlab.setText("Send for Test");
        btn_requestlab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_requestlabActionPerformed(evt);
            }
        });
        panel_requestlab.add(btn_requestlab, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(panel_savevitals, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(panel_seeReport, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(panel_requestlab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(535, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panel_seeReport, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel_savevitals, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panel_requestlab, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 422, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_svaevitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_svaevitalsActionPerformed
        // TODO add your handling code here:
        
        
        //CONVERT LOCAL DATE TO DATE
        LocalDateTime now = LocalDateTime.now();
        ZoneId defaultzoneid = ZoneId.systemDefault();
        ZonedDateTime zdt = now.atZone(defaultzoneid);
        Date to_Date_now = Date.from(zdt.toInstant());
        
        
        Double temperature;
        int breathing;
        int pulse;
        int bp;
        double weight;
        Date vitalsignsdate;
        
         if (txt_bp.getText().isEmpty() || txt_breathing.getText().isEmpty() || 
                    txt_temp.getText().isEmpty() || txt_weight.getText().isEmpty() || 
                    date.getDate() == null ) {
            JOptionPane.showMessageDialog(null, "Vital Signs cannot be empty");
            return;
        } 
         else{
             try{
                temperature = Double.parseDouble(txt_temp.getText());
                if(temperature < 0){
                    JOptionPane.showMessageDialog(rightpanel1, "Enter correct temperature");
                    return;
                }
             }
             catch(Exception e){
                 JOptionPane.showMessageDialog(rightpanel1, "Enter correct temperature");
                 return;
         }
             try{
                weight = Double.parseDouble(txt_weight.getText());
                if(weight < 0){
                    JOptionPane.showMessageDialog(rightpanel1, "Enter correct weight");
                    return;
                }
             }
             catch(Exception e){
                 JOptionPane.showMessageDialog(rightpanel1, "Enter correct weight");
                 return;
             }
         
             try{
                breathing = Integer.parseInt(txt_breathing.getText());
                if(breathing < 0){
                    JOptionPane.showMessageDialog(rightpanel1, "Enter breathing rate");
                    return;
                }
             }
             catch(Exception e){
                 JOptionPane.showMessageDialog(rightpanel1, "Enter correct breathing rate");
                 return;
             }
             try{
                bp = Integer.parseInt(txt_bp.getText());
                if(bp < 0){
                    JOptionPane.showMessageDialog(rightpanel1, "Enter correct breathing rate");
                    return;
                }
             }
             catch(Exception e){
                 JOptionPane.showMessageDialog(rightpanel1, "Enter correct breathing rate");
                 return;
             }
             try{
                pulse = Integer.parseInt(txt_pulse1.getText());
                if(pulse < 0){
                    JOptionPane.showMessageDialog(rightpanel1, "Enter correct pulse rate");
                    return;
                }
             }
             catch(Exception e){
                 JOptionPane.showMessageDialog(rightpanel1, "Enter correct pulse rate");
                 return;
             }
             try{
                vitalsignsdate = date.getDate();
                if(vitalsignsdate.before(to_Date_now)){
                    JOptionPane.showMessageDialog(rightpanel1, "Enter correct date");
                    return;
                }
             }
             catch(Exception e){
                 JOptionPane.showMessageDialog(rightpanel1, "Enter correct date");
                 return;
             }
             
             
            for(Child c:business.getChildDirectory().getChildlist()){
                if(c.getUsername().equals(childval.getUsername())){
                    c.setBodytemp(temperature);
                    c.setPulseRate(pulse);
                    c.setRespirationRate(breathing);
                    c.setBP(bp);
                    c.setWeight(weight);
                    c.setVitalSignsDate(vitalsignsdate);
                }
            }
            
            for(Child c:childval.getOrg().getChildDirectory().getChildlist()){

                if(c.getUsername().equals(childval.getUsername())){
                    JOptionPane.showMessageDialog(rightpanel1, "Hello");
                    c.setBodytemp(temperature);
                    c.setPulseRate(pulse);
                    c.setRespirationRate(breathing);
                    c.setBP(bp);
                    c.setWeight(weight);
                    c.setVitalSignsDate(vitalsignsdate);
                }
            }

            JOptionPane.showMessageDialog(rightpanel1, "Vital Signs Saved");
             
         }

    }//GEN-LAST:event_btn_svaevitalsActionPerformed

    private void btn_seereportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_seereportActionPerformed
        // TODO add your handling code here:
        
        txt_weightr.setText(String.valueOf(childval.getWeight()));
        txt_tempr.setText(String.valueOf(childval.getBodytemp()));
        txt_pulser.setText(String.valueOf(childval.getPulseRate()));
        txt_bpr.setText(String.valueOf(childval.getBP()));
        txt_breathingr.setText(String.valueOf(childval.getRespirationRate()));
        txt_dater.setText(String.valueOf(childval.getVitalSignsDate()));
        
        String weight = String.valueOf(txt_weightr.getText());
        String temp = String.valueOf(txt_tempr.getText());
        String pulse = String.valueOf(txt_pulser.getText());
        String bp = String.valueOf(txt_bpr.getText());
        String breathing = String.valueOf(txt_breathingr.getText());
        String vitalsignsdate = String.valueOf(txt_dater.getText());
        
        int age = Integer.parseInt(txt_age.getText());
        
        if(age >= 0 && age < 1){
            if(childval.getWeight() >=9 && childval.getWeight() <= 22){
                lbl_weight.setText("Normal");
                lbl_weight.setVisible(true);
                lbl_weight.setForeground(Color.green);
            }
            else{
                lbl_weight.setText("NOT NORMAL");
                lbl_weight.setVisible(true);
                lbl_weight.setForeground(Color.red);
            }
        }
        if(age >= 1 && age < 3){
            if(childval.getWeight() >=22 && childval.getWeight() <= 31){
                lbl_weight.setText("Normal");
                lbl_weight.setVisible(true);
                lbl_weight.setForeground(Color.green);
            }
            else{
                lbl_weight.setText("NOT NORMAL");
                lbl_weight.setVisible(true);
                lbl_weight.setForeground(Color.red);
            }
        }
        if(age >= 3 && age <= 5){
            if(childval.getWeight() >=31 && childval.getWeight() <= 40){
                lbl_weight.setText("Normal");
                lbl_weight.setVisible(true);
                lbl_weight.setForeground(Color.green);
            }
            else{
                lbl_weight.setText("NOT NORMAL");
                lbl_weight.setVisible(true);
                lbl_weight.setForeground(Color.red);
            }
        }
         if(age >= 6 && age <= 12){
            if(childval.getWeight() >=41 && childval.getWeight() <= 92){
                lbl_weight.setText("Normal");
                lbl_weight.setVisible(true);
                lbl_weight.setForeground(Color.green);
            }
            else{
                lbl_weight.setText("NOT NORMAL");
                lbl_weight.setVisible(true);
                lbl_weight.setForeground(Color.red);
            }
        }
         
        
         if(age >= 0 && age < 1){
            if(childval.getPulseRate()>=80 && childval.getPulseRate() <= 180){
                lbl_pulse.setText("Normal");
                lbl_pulse.setVisible(true);
                lbl_pulse.setForeground(Color.green);
            }
            else{
                lbl_pulse.setText("NOT NORMAL");
                lbl_pulse.setVisible(true);
                lbl_pulse.setForeground(Color.red);
            }
        }
         if(age >= 1 && age < 3){
            if(childval.getPulseRate()>=80 && childval.getPulseRate() <= 160){
                lbl_pulse.setText("Normal");
                lbl_pulse.setVisible(true);
                lbl_weight.setForeground(Color.green);
            }
            else{
                lbl_pulse.setText("NOT NORMAL");
                lbl_pulse.setVisible(true);
                lbl_pulse.setForeground(Color.red);
            }
        }
         if(age >= 3 && age <= 5){
            if(childval.getPulseRate()>=80 && childval.getPulseRate() <= 110){
                lbl_pulse.setText("Normal");
                lbl_pulse.setVisible(true);
                lbl_pulse.setForeground(Color.green);
            }
            else{
                lbl_pulse.setText("NOT NORMAL");
                lbl_pulse.setVisible(true);
                lbl_pulse.setForeground(Color.red);
            }
        }
         
        if(age >= 6 && age <= 12){
            if(childval.getPulseRate()>=75 && childval.getPulseRate() <= 110){
                lbl_pulse.setText("Normal");
                lbl_pulse.setVisible(true);
                lbl_weight.setForeground(Color.green);
            }
            else{
                lbl_pulse.setText("NOT NORMAL");
                lbl_pulse.setVisible(true);
                lbl_pulse.setForeground(Color.red);
            }
        }
        
        
        if(age >= 0 && age < 1){
            if(childval.getBP()>=50 && childval.getBP() <= 100){
                lbl_bp.setText("Normal");
                lbl_bp.setVisible(true);
                lbl_bp.setForeground(Color.green);
            }
            else{
                lbl_bp.setText("NOT NORMAL");
                lbl_bp.setVisible(true);
                lbl_bp.setForeground(Color.red);
            }
        }
        
        if(age >= 1 && age <= 5){
            if(childval.getBP()>=80 && childval.getBP() <= 110){
                lbl_bp.setText("Normal");
                lbl_bp.setVisible(true);
                lbl_bp.setForeground(Color.green);
            }
            else{
                lbl_bp.setText("NOT NORMAL");
                lbl_bp.setVisible(true);
                lbl_bp.setForeground(Color.red);
            }
        }
        
        if(age >= 6 && age <= 12){
            if(childval.getBP()>=80 && childval.getBP() <= 120){
                lbl_bp.setText("Normal");
                lbl_bp.setVisible(true);
                lbl_bp.setForeground(Color.green);
            }
            else{
                lbl_bp.setText("NOT NORMAL");
                lbl_bp.setVisible(true);
                lbl_bp.setForeground(Color.red);
            }
        }
        
        if(age >= 0 && age < 1){
            if(childval.getBodytemp()>=98 && childval.getBodytemp() <= 100){
                lbl_temp.setText("Normal");
                lbl_temp.setVisible(true);
                lbl_temp.setForeground(Color.green);
            }
            else{
                lbl_temp.setText("NOT NORMAL");
                lbl_temp.setVisible(true);
                lbl_temp.setForeground(Color.red);
            }
        }
        
        if(age >= 1 && age <= 3){
            if(childval.getBodytemp()>=96.8 && childval.getBodytemp() <= 99.6){
                lbl_temp.setText("Normal");
                lbl_temp.setVisible(true);
                lbl_temp.setForeground(Color.green);
            }
            else{
                lbl_temp.setText("NOT NORMAL");
                lbl_temp.setVisible(true);
                lbl_temp.setForeground(Color.red);
            }
        }
        if(age >= 4 && age <= 12){
            if(childval.getBodytemp()==98.6){
                lbl_temp.setText("Normal");
                lbl_temp.setVisible(true);
                lbl_temp.setForeground(Color.green);
            }
            else{
                lbl_temp.setText("NOT NORMAL");
                lbl_temp.setVisible(true);
                lbl_temp.setForeground(Color.red);
            }
        }
        
       if(age >= 0 && age < 1){
            if(childval.getRespirationRate()>=20 && childval.getBodytemp() <= 50){
                lbl_breathing.setText("Normal");
                lbl_breathing.setVisible(true);
                lbl_breathing.setForeground(Color.green);
            }
            else{
                lbl_breathing.setText("NOT NORMAL");
                lbl_breathing.setVisible(true);
                lbl_breathing.setForeground(Color.red);
            }
        }
       
       if(age >= 1 && age < 5){
            if(childval.getRespirationRate()>=20 && childval.getRespirationRate()<= 30){
                lbl_breathing.setText("Normal");
                lbl_breathing.setVisible(true);
                lbl_breathing.setForeground(Color.green);
            }
            else{
                lbl_breathing.setText("NOT NORMAL");
                lbl_breathing.setVisible(true);
                lbl_breathing.setForeground(Color.red);
            }
        }
       
       if(age >= 6 && age < 12){
            if(childval.getRespirationRate()>=20 && childval.getRespirationRate()<= 30){
                lbl_breathing.setText("Normal");
                lbl_breathing.setVisible(true);
            }
            else{
                lbl_breathing.setText("NOT NORMAL");
                lbl_breathing.setVisible(true);
            }
        }
         
      if(lbl_bp.getText().equals("Normal") && lbl_breathing.getText().equals("Normal") && 
              lbl_pulse.getText().equals("Normal") && lbl_temp.getText().equals("Normal") &&
              lbl_weight.getText().equals("Normal")){
          
              for(Child c:business.getChildDirectory().getChildlist()){
                if(c.getUsername().equals(childval.getUsername())){
                   c.setIsVitalSignsNormal(true);
                }
            }
            
            for(Child c:childval.getOrg().getChildDirectory().getChildlist()){

                if(c.getUsername().equals(childval.getUsername())){
                   c.setIsVitalSignsNormal(true);
                }
            }
              
      }
      
      else{
          for(Child c:business.getChildDirectory().getChildlist()){
              JOptionPane.showMessageDialog(rightpanel1, "K"+c.equals(childval));
                if(c.getUsername().equals(childval.getUsername())){
                   c.setIsVitalSignsNormal(true);
                }
            }
            
            for(Child c:childval.getOrg().getChildDirectory().getChildlist()){
                JOptionPane.showMessageDialog(rightpanel1, "K"+c.equals(childval));
                if(c.getUsername().equals(childval.getUsername())){
                   c.setIsVitalSignsNormal(true);
                }
            }
      }
      
      for(Child c:business.getChildDirectory().getChildlist()){
              
              JOptionPane.showMessageDialog(rightpanel1, c.isIsVitalSignsNormal());
                
            }
            
            for(Child c:childval.getOrg().getChildDirectory().getChildlist()){

                JOptionPane.showMessageDialog(rightpanel1, c.isIsVitalSignsNormal());
            }
        
        
    }//GEN-LAST:event_btn_seereportActionPerformed

    private void txt_bpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_bpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bpActionPerformed

    private void txt_bprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_bprActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_bprActionPerformed

    private void btn_requestlabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_requestlabActionPerformed
        // TODO add your handling code here:
        
        
        
        
    }//GEN-LAST:event_btn_requestlabActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_requestlab;
    private javax.swing.JButton btn_seereport;
    private javax.swing.JButton btn_svaevitals;
    private com.toedter.calendar.JDateChooser date;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel lbl_bp;
    private javax.swing.JLabel lbl_breathing;
    private javax.swing.JLabel lbl_pulse;
    private javax.swing.JLabel lbl_temp;
    private javax.swing.JLabel lbl_weight;
    private javax.swing.JPanel panel_requestlab;
    private javax.swing.JPanel panel_savevitals;
    private javax.swing.JPanel panel_seeReport;
    private javax.swing.JPanel panel_singleparent;
    private javax.swing.JTextField txt_about1;
    private javax.swing.JTextField txt_age;
    private javax.swing.JTextField txt_agency;
    private javax.swing.JTextField txt_bp;
    private javax.swing.JTextField txt_bpr;
    private javax.swing.JTextField txt_breathing;
    private javax.swing.JTextField txt_breathingr;
    private javax.swing.JTextField txt_city;
    private javax.swing.JTextField txt_dater;
    private javax.swing.JTextField txt_firstname;
    private javax.swing.JTextField txt_gender;
    private javax.swing.JTextField txt_lastname;
    private javax.swing.JTextField txt_message;
    private javax.swing.JTextField txt_pulse1;
    private javax.swing.JTextField txt_pulser;
    private javax.swing.JTextField txt_temp;
    private javax.swing.JTextField txt_tempr;
    private javax.swing.JTextField txt_weight;
    private javax.swing.JTextField txt_weightr;
    // End of variables declaration//GEN-END:variables
}
